--- htmldoc-1.8.28/configure.ac.omv~	2014-06-28 22:14:17.363103920 +0200
+++ htmldoc-1.8.28/configure.ac	2014-06-28 22:14:54.072644987 +0200
@@ -173,7 +173,7 @@ if test x$enable_ssl != xno; then
 	    dnl included...
 	    SAVELIBS="$LIBS"
 
-	    TEST_GNUTLS_LIBS=`libgnutls-config --libs`
+	    TEST_GNUTLS_LIBS=`pkg-config --libs gnutls`
 	    AC_CHECK_LIB(gnutls, gnutls_init,
 		[SSLLIBS=$TEST_GNUTLS_LIBS
 		 AC_DEFINE(HAVE_SSL)
--- htmldoc-1.8.28/htmldoc/http-addrlist.c.omv~	2014-06-28 22:15:57.723849238 +0200
+++ htmldoc-1.8.28/htmldoc/http-addrlist.c	2014-06-28 22:16:04.160768765 +0200
@@ -27,6 +27,7 @@
 #ifdef HAVE_RESOLV_H
 #  include <resolv.h>
 #endif /* HAVE_RESOLV_H */
+#include <errno.h>
 
 
 /*
--- htmldoc-1.8.28/htmldoc/http.c.omv~	2014-06-28 22:13:03.628025735 +0200
+++ htmldoc-1.8.28/htmldoc/http.c	2014-06-28 22:15:50.889934674 +0200
@@ -37,6 +37,9 @@
 #ifdef HAVE_POLL
 #  include <sys/poll.h>
 #endif /* HAVE_POLL */
+#ifdef HAVE_GNUTLS
+#  include <gnutls/gnutls.h>
+#endif
 
 
 /*
@@ -1902,7 +1905,7 @@ _httpReadCDSA(
 
 ssize_t					/* O - Number of bytes read or -1 on error */
 _httpReadGNUTLS(
-    gnutls_transport_ptr ptr,		/* I - Connection to server */
+    gnutls_transport_ptr_t ptr,		/* I - Connection to server */
     void                 *data,		/* I - Buffer */
     size_t               length)	/* I - Number of bytes to read */
 {
@@ -2861,7 +2864,7 @@ _httpWriteCDSA(
 
 ssize_t					/* O - Number of bytes written or -1 on error */
 _httpWriteGNUTLS(
-    gnutls_transport_ptr ptr,		/* I - Connection to server */
+    gnutls_transport_ptr_t ptr,		/* I - Connection to server */
     const void           *data,		/* I - Data buffer */
     size_t               length)	/* I - Number of bytes to write */
 {
@@ -3499,7 +3502,7 @@ http_setup_ssl(http_t *http)		/* I - Con
   gnutls_server_name_set(http->tls, GNUTLS_NAME_DNS, hostname,
                          strlen(hostname));
   gnutls_credentials_set(http->tls, GNUTLS_CRD_CERTIFICATE, *credentials);
-  gnutls_transport_set_ptr(http->tls, (gnutls_transport_ptr)http);
+  gnutls_transport_set_ptr(http->tls, (gnutls_transport_ptr_t)http);
   gnutls_transport_set_pull_function(http->tls, _httpReadGNUTLS);
   gnutls_transport_set_push_function(http->tls, _httpWriteGNUTLS);
 
--- htmldoc-1.8.28/htmldoc/http-private.h.omv~	2014-06-28 22:15:20.315316909 +0200
+++ htmldoc-1.8.28/htmldoc/http-private.h	2014-06-28 22:15:36.945109008 +0200
@@ -196,12 +196,12 @@ extern BIO_METHOD *_httpBIOMethods(void)
  * The GNU TLS library is more of a "bare metal" SSL/TLS library...
  */
 
-typedef gnutls_session http_tls_t;
+typedef gnutls_session_t http_tls_t;
 typedef void *http_tls_credentials_t;
 
-extern ssize_t	_httpReadGNUTLS(gnutls_transport_ptr ptr, void *data,
+extern ssize_t	_httpReadGNUTLS(gnutls_transport_ptr_t ptr, void *data,
 		                size_t length);
-extern ssize_t	_httpWriteGNUTLS(gnutls_transport_ptr ptr, const void *data,
+extern ssize_t	_httpWriteGNUTLS(gnutls_transport_ptr_t ptr, const void *data,
 		                 size_t length);
 
 #  elif defined(HAVE_CDSASSL)
